version: "3.4"

x-extra_hosts: &default-extra_hosts
  - "sofi_tbr_integration:192.168.113.11"
  - "sofi_tbr_integration_dev:192.168.113.12"

services:
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.4
    container_name: keycloak
    ports:
      - "8080:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - PROXY_ADDRESS_FORWARDING=true
      - KC_HOSTNAME_URL=https://${SOFI_HOSTNAME}/auth
      - KC_DB=postgres
      - KC_DB_PASSWORD=${PG_SECRET}
      - KC_DB_SCHEMA=public
      - KC_DB_USERNAME=${PG_USER}
      - KC_DB_URL_HOST=postgresd
      - KC_DB_URL_DATABASE=keycloak
      - KC_LOG_LEVEL=info
      - KC_PROXY=edge
      - KC_HTTP_RELATIVE_PATH=/auth
    depends_on:
      - postgresd
      - mailhog
    restart: on-failure
    command: -v start --import-realm
    volumes:
      - ./auth/import:/opt/keycloak/data/import

  sap_api:
    expose:
      - 6000
    ports:
      - "6000:6000"
    command: ["/bin/sh", "-c", "/app/start.sh"]
    depends_on:
      - "keycloak"
      - "bioapi"
    restart: on-failure

    environment:
      - APP_MODULE=wsgi:app
      - IDP=https://${SOFI_HOSTNAME}/auth/realms/sofi/protocol/openid-connect/certs
      - SOFI_CLIENT_ID=${SOFI_CLIENT_ID}
      - BIFROST_MONGO_CONN=${BIFROST_MONGO_CONN}
      - BIFROST_MONGO_DB=${BIFROST_MONGO_DB}
      - SOFI_BIFROST_ENCRYPTION_NAME=${SOFI_BIFROST_ENCRYPTION_NAME}
      - SOFI_BIFROST_ENCRYPTION_KEY=${SOFI_BIFROST_ENCRYPTION_KEY}
      - SOFI_UPLOAD_DIR=/tmp
      - LOG_LEVEL=${LOG_LEVEL}
      - TBR_API_URL=${TBR_API_URL}
      - TBR_CLIENT_KEY=/app/.certs/client.key
      - TBR_CLIENT_CERT=/app/.certs/client.pem
      - TBR_ROOT_CA=/app/.certs/SOFI_ROOT.pem
      - LIMS_API_URL=${LIMS_API_URL}
      - LIMS_API_DATABASEID=${LIMS_API_DATABASEID}
      - LIMS_API_USERNAME=${LIMS_API_USERNAME}
      - LIMS_API_PASSWORD=${LIMS_API_PASSWORD}
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
      - DEBUG_MODE=${DEBUG_MODE}
    volumes:
      - ${TBR_CLIENT_KEY}:/app/.certs/client.key:ro
      - ${TBR_CLIENT_CERT}:/app/.certs/client.pem:ro
      - ${TBR_ROOT_CA}:/app/.certs/SOFI_ROOT.pem:ro

  sap_app:
    expose:
      - 3333
    user: ${CURRENT_UID}
    environment:
      - NODE_ENV=production
      - PORT=3333
    depends_on:
      - "sap_api"

  queue_broker_lims_pull:
    build:
      context: ./bifrost/bifrost_queue_broker
      dockerfile: bifrost_queue_broker/bifrost_queue_broker_lims_pull/Dockerfile
    container_name: bifrost_queue_broker_lims_pull
    image: bifrost_queue_broker_lims_pull
    restart: on-failure
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=0
      - BIFROST_MONGO_CONN=${BIFROST_MONGO_CONN}
      - BIFROST_MONGO_DB=${BIFROST_MONGO_DB}
      - BIFROST_MONGO_QUEUE_COLLECTION=sap_broker_queue
      - BIFROST_MONGO_LIMS_METADATA_COLLECTION=sap_lims_metadata
      - BIFROST_MONGO_ANALYSIS_VIEW_COLLECTION=sap_analysis_results
      - SOFI_BIFROST_ENCRYPTION_NAME=${SOFI_BIFROST_ENCRYPTION_NAME}
      - SOFI_BIFROST_ENCRYPTION_KEY=${SOFI_BIFROST_ENCRYPTION_KEY}
      - LIMS_API_URL=${LIMS_API_URL}
      - LIMS_API_DATABASEID=${LIMS_API_DATABASEID}
      - LIMS_API_USERNAME=${LIMS_API_USERNAME}
      - LIMS_API_PASSWORD=${LIMS_API_PASSWORD}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - ./bifrost/bifrost_queue_broker:/app
  queue_broker_tbr_pull:
    build:
      context: ./bifrost/bifrost_queue_broker
      dockerfile: bifrost_queue_broker/bifrost_queue_broker_tbr_pull/Dockerfile
    container_name: bifrost_queue_broker_tbr_pull
    image: bifrost_queue_broker_tbr_pull
    restart: on-failure
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=0
      - BIFROST_MONGO_CONN=${BIFROST_MONGO_CONN}
      - BIFROST_MONGO_DB=${BIFROST_MONGO_DB}
      - BIFROST_MONGO_QUEUE_COLLECTION=sap_broker_queue
      - BIFROST_MONGO_TBR_METADATA_COLLECTION=sap_tbr_metadata
      - BIFROST_MONGO_ANALYSIS_VIEW_COLLECTION=sap_analysis_results
      - SOFI_BIFROST_ENCRYPTION_NAME=${SOFI_BIFROST_ENCRYPTION_NAME}
      - SOFI_BIFROST_ENCRYPTION_KEY=${SOFI_BIFROST_ENCRYPTION_KEY}
      - TBR_API_URL=${TBR_API_URL}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - ./bifrost/bifrost_queue_broker:/app
  queue_broker_lims_request:
    build:
      context: ./bifrost/bifrost_queue_broker
      dockerfile: bifrost_queue_broker_lims_request/Dockerfile
    container_name: bifrost_queue_broker_lims_request
    image: bifrost_queue_broker_lims_request
    restart: on-failure
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=0
      - BIFROST_MONGO_CONN=${BIFROST_MONGO_CONN}
      - BIFROST_MONGO_DB=${BIFROST_MONGO_DB}
      - BIFROST_MONGO_QUEUE_COLLECTION=sap_broker_queue
      - BIFROST_MONGO_LIMS_METADATA_COLLECTION=sap_lims_metadata
      - BIFROST_MONGO_ANALYSIS_VIEW_COLLECTION=sap_analysis_results
      - SOFI_BIFROST_ENCRYPTION_NAME=${SOFI_BIFROST_ENCRYPTION_NAME}
      - SOFI_BIFROST_ENCRYPTION_KEY=${SOFI_BIFROST_ENCRYPTION_KEY}
      - LIMS_API_URL=${LIMS_API_URL}
      - LIMS_API_DATABASEID=${LIMS_API_DATABASEID}
      - LIMS_API_USERNAME=${LIMS_API_USERNAME}
      - LIMS_API_PASSWORD=${LIMS_API_PASSWORD}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - ./bifrost/bifrost_queue_broker:/app
  queue_broker_tbr_request:
    build:
      context: ./bifrost/bifrost_queue_broker
      dockerfile: bifrost_queue_broker_tbr_request/Dockerfile
    container_name: bifrost_queue_broker_tbr_request
    image: bifrost_queue_broker_tbr_request
    restart: on-failure
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=0
      - BIFROST_MONGO_CONN=${BIFROST_MONGO_CONN}
      - BIFROST_MONGO_DB=${BIFROST_MONGO_DB}
      - BIFROST_MONGO_QUEUE_COLLECTION=sap_broker_queue
      - BIFROST_MONGO_TBR_METADATA_COLLECTION=sap_tbr_metadata
      - BIFROST_MONGO_ANALYSIS_VIEW_COLLECTION=sap_analysis_results
      - SOFI_BIFROST_ENCRYPTION_NAME=${SOFI_BIFROST_ENCRYPTION_NAME}
      - SOFI_BIFROST_ENCRYPTION_KEY=${SOFI_BIFROST_ENCRYPTION_KEY}
      - TBR_API_URL=${TBR_API_URL}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - ./bifrost/bifrost_queue_broker:/app

  bifrost_listener:
    container_name: bifrost_listener
    user: ${CURRENT_UID}
    environment:
      - BIFROST_CONN=${BIFROST_MONGO_CONN}
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=0
      - LOG_LEVEL=${LOG_LEVEL}
    restart: on-failure
    depends_on:
      - "sap_api"

  proxy:
    networks:
      default:
        aliases:
          - ${SOFI_HOSTNAME}
    container_name: ${SOFI_HOSTNAME}
    hostname: ${SOFI_HOSTNAME}
    image: caddy:2.5.0-alpine
    environment:
      SOFI_HOSTNAME: ${SOFI_HOSTNAME}
      SOFI_PORT: ${SOFI_PORT}
      SOFI_HASH: ${SOFI_HASH}
    ports:
      - "${SOFI_PORT}:443"
    command:
      - "caddy"
      - "run"
      - "-config"
      - "/etc/Caddyfile"
    depends_on:
      - "sap_api"
      - "sap_app"
      - "keycloak"
    volumes:
      - ./Caddyfile:/etc/Caddyfile:ro
      - ${TLS_KEY_PATH}:/etc/sofi.pem:ro
      - ${TLS_CERT_PATH}:/etc/sofi.crt:ro

  postgresd:
    image: postgres:13
    user: ${CURRENT_UID}
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_SECRET}
      - POSTGRES_MULTIPLE_DATABASES=keycloak
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./auth/pg/pg-init:/docker-entrypoint-initdb.d
      - ${PG_DATA_DIR}:/var/lib/postgresql/data/

  bioapi:
    image: ghcr.io/ssi-dk/bio_api:latest
    user: ${CURRENT_UID}
    ports:
      - "8000:8000"
    expose:
      - 8000
    environment:
      BIO_API_MONGO_CONNECTION: ${BIFROST_MONGO_CONN}
    restart: on-failure
    volumes:
      - ./dmx_data:/dmx_data

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: ${SOFI_SUBNET} 
