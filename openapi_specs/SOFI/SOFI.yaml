openapi: 3.0.1
info:
  description: SOFI Sekvensanalyseplatform
  title: SOFI
  version: 0.1.0
servers:
  - url: 'http://localhost:8080/api/'
tags:
  - description: Operations about user
    name: user
  - description: Operations for isolates
    name: analysis
security:
  - jwt: []

paths:
  /workspaces:
    get:
      description: Gets workspaces
      operationId: get_workspaces
      x-openapi-router-controller: web.src.SAP.generated.controllers.workspaces_controller
      tags:
        - workspaces
      responses:
        '200':
          description: Workspaces info
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workspace'
    post:
      operationId: create_workspace
      requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkspace"
      responses:
        '204':
          description: "Workspace created."
      tags:
        - workspaces
      x-openapi-router-controller: web.src.SAP.generated.controllers.workspaces_controller
  /workspaces/create_from_sequence_ids:
    post:
      operationId: create_workspace_from_sequence_ids
      requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkspace"
      responses:
        '204':
          description: "Workspace created."
      tags:
        - workspaces
      x-openapi-router-controller: web.src.SAP.generated.controllers.workspaces_controller
  /workspace/clone:
    post:
      operationId: clone_workspace
      requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloneWorkspace"
      responses:
        '204':
          description: "Workspace cloned."
      tags:
        - workspaces
      x-openapi-router-controller: web.src.SAP.generated.controllers.workspaces_controller
  /workspace/{workspace_id}/{sample_id}:
    delete:
      description: Delete sample from workspace
      operationId: delete_workspace_sample
      tags:
        - workspaces
      x-openapi-router-controller: web.src.SAP.generated.controllers.workspaces_controller
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
          description: Id of workspace to modify
        - name: sample_id
          in: path
          required: true
          schema:
            type: string
          description: Id of the sample to remove
      responses:
        '204':
          description: Sample removed from workspace successfully.

  /workspaces/{workspace_id}/data:
    get:
      description: Get an workspace data
      operationId: get_workspace_data
      tags:
        - workspaces
      x-openapi-router-controller: web.src.SAP.generated.controllers.workspaces_controller
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
          description: Id of workspace to get
      responses:
        '200':
          description: Data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items: {}
      security: 
        - microreactjwt: []

  /workspaces/{workspace_id}:
    get:
      description: Get an existing workspace
      operationId: get_workspace
      tags:
        - workspaces
      x-openapi-router-controller: web.src.SAP.generated.controllers.workspaces_controller
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
          description: Id of workspace to get
      responses:
        '200':
          description: Workspace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceInfo'
    delete:
      description: Delete an existing workspace
      operationId: delete_workspace
      tags:
        - workspaces
      x-openapi-router-controller: web.src.SAP.generated.controllers.workspaces_controller
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
          description: Id of workspace to delete
      responses:
        '204':
          description: Workspace deleted successfully.
    post:
      description: Updates an existing workspace
      operationId: post_workspace
      tags:
        - workspaces
      x-openapi-router-controller: web.src.SAP.generated.controllers.workspaces_controller
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
          description: Id of workspace to update
      requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateWorkspace"
      responses:
        '204':
          description: Workspace updated successfully.

  /microreact_integration:
    post:
      description: Send to Microreact
      operationId: send_to_microreact
      x-openapi-router-controller: web.src.SAP.generated.controllers.microreact_controller
      x-codegen-request-body-name: body
      tags:
        - microreact
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NewMicroreactProjectRequest"
        required: true
      responses:
        '200':
          description: Microreact Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NewMicroreactProjectResponse"

  /microreact_integration/base_url:
    get:
      description: Get the base url to Microreact
      operationId: get_microreact_url
      x-openapi-router-controller: web.src.SAP.generated.controllers.microreact_controller
      tags:
        - microreact
      responses:
        '200':
          description: Microreact Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MicroreactUrlResponse"

  /nearest_neighbors:
    post:
      description: Nearest Neighbors
      operationId: post
      x-openapi-router-controller: web.src.SAP.generated.controllers.nearest_neighbors_controller
      x-codegen-request-body-name: body
      tags:
        - nearest_neighbors
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NearestNeighborsRequest"
        required: true
      responses:
        '200':
          description: Nearest Neighbors Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NearestNeighborsResponse"
  /me:
    get:
      description: Describe the current user and their permissions
      operationId: who_am_i
      x-openapi-router-controller: web.src.SAP.generated.controllers.user_controller
      tags:
        - user
      responses:
        '200':
          description: User info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'

  /analysis:
    get:
      description: Page through all the analysis in the system
      operationId: get_analysis
      x-openapi-router-controller: web.src.SAP.generated.controllers.analysis_controller
      tags:
        - analysis
      parameters:
        - name: paging_token
          in: query
          description: opaque token to supply to get the next page of isolates
          required: false
          schema:
            type: string
            format: byte
            nullable: true
        - name: page_size
          in: query
          required: false
          schema:
            type: number
            default: 100
      responses:
        '200':
          description: Page of isolates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfAnalysis'

    post:
      description: Search all analysis by given query
      operationId: search_analysis
      x-openapi-router-controller: web.src.SAP.generated.controllers.analysis_controller
      x-codegen-request-body-name: query
      tags:
        - analysis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisQuery'
      responses:
        '200':
          description: Page of isolates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfAnalysis'

  /analysis-history/{isolate_id}:
    get:
      description: Get analysis history by isolate_id
      operationId: get_analysis_history
      x-openapi-router-controller: web.src.SAP.generated.controllers.analysis_controller
      tags:
        - analysis
      parameters:
        - name: isolate_id
          in: path
          required: true
          schema:
            type: string
          description: Id of isolate
      responses:
        '200':
          description: Analysis history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisHistory'

  /analysis/by_id:
    get:
      description: Get an individual analysis result by sequence_id
      operationId: get_sequence_by_id
      x-openapi-router-controller: web.src.SAP.generated.controllers.analysis_controller
      tags:
        - analysis
      parameters:
        - name: sequence_id
          in: query
          required: true
          schema:
            type: string
          description: sequence_id of analysis result
      responses:
        '200':
          description: Analysis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleAnalysisResult'

  /analysis/columns:
    get:
      description: Get column metadata, scoped to authenticated user
      operationId: get_columns
      x-openapi-router-controller: web.src.SAP.generated.controllers.analysis_controller
      tags:
        - analysis
      responses:
        '200':
          description: Column collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Column'
  /analysis/changes:
    post:
      description: Submit a batch of analysis data changes
      operationId: submit_changes
      tags:
        - analysis
      x-openapi-router-controller: web.src.SAP.generated.controllers.analysis_controller
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisChange'
      responses:
        '200':
          description: Changes accepted 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisChange'
  /analysis/reload_metadata:
    post:
      description: Reload metadata for a given isolate
      operationId: reload_metadata
      tags:
        - analysis
      x-openapi-router-controller: web.src.SAP.generated.controllers.analysis_controller
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataReloadRequest'
      responses:
        '200':
          description: Reload successful 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataReloadResponse'

  /analysis/comparative/newick:
    get:
      description: Get newick tree file along with metadata for a given job id.
      operationId: get_comparative_newick_data
      x-openapi-router-controller: web.src.SAP.generated.controllers.comparative_analysis_controller
      parameters:
        - name: job_id
          in: query
          description: Job id that points to the comparative analysis run.
          required: true
          schema:
            type: string
      tags:
        - comparative_analysis
      responses:
        '200':
          description: Newick tree
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewickTreeResponse'

  /approvals:
    get:
      description: Retrieve list of approvals for authenticated user
      operationId: get_approvals
      tags:
        - approval
      x-openapi-router-controller: web.src.SAP.generated.controllers.approval_controller
      responses:
        '200':
          description: List of Approvals
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Approval'
    post:
      description: Submit approval/rejection information
      operationId: create_approval
      tags:
        - approval
      x-openapi-router-controller: web.src.SAP.generated.controllers.approval_controller
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprovalRequest'
      responses:
        '201':
          description: Approval accepted 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
  /approvals/matrix:
    get:
      description: Get the entire approval matrix for all analysis
      operationId: full_approval_matrix
      tags:
        - approval
      x-openapi-router-controller: web.src.SAP.generated.controllers.approval_controller
      responses:
        '200':
          description: Approval matrix 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApprovalMatrix"
  '/approvals/{approval_id}/{sequences}':
    delete:
      description: Cancel a pending approval
      operationId: cancel_approval
      tags:
        - approval
      x-openapi-router-controller: web.src.SAP.generated.controllers.approval_controller
      parameters:
        - name: approval_id
          in: path
          required: true
          schema:
            type: string
          description: Id of approval to cancel
          explode: true
        - name: sequences
          in: path
          required: true
          schema:
            type: string
          description: semicolon sperated sequence ids to rejoke approval
          explode: true
      responses:
        '204':
          description: Approval cancelled successfully.
      
  /user/views:
    get:
      operationId: get_user_views
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserDefinedView"
          description: Return user-defined view collection for the authenticated user
      tags:
        - user
      x-openapi-router-controller: web.src.SAP.generated.controllers.user_controller
    post:
      operationId: create_user_view
      requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDefinedView"
      responses:
        '204':
          description: "User-defined view created."
      tags:
        - user
      x-openapi-router-controller: web.src.SAP.generated.controllers.user_controller
  /user/views/{name}:
    delete:
      description: Delete an existing view
      operationId: delete_view
      tags:
        - user
      x-openapi-router-controller: web.src.SAP.generated.controllers.user_controller
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: Name of view to delete
      responses:
        '204':
          description: View deleted successfully.

  /gdpr/extract:
    get:
      description: Extract all data given a personal identifier
      operationId: extract_data_from_pi
      tags:
        - gdpr
      x-openapi-router-controller: web.src.SAP.generated.controllers.gdpr_controller
      parameters:
        - in: query
          name: identifier_type
          schema:
            $ref: '#/components/schemas/PersonalIdentifierType'
          description: Identifier type
          required: true
        - in: query
          name: identifier
          schema:
            type: string
          description: Personal identifier number.
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalData'
  /gdpr/forget:
    get:
      description: Forget about a person identifer, GDPR right to be forgotten
      operationId: forget_pii
      tags:
        - gdpr
      x-openapi-router-controller: web.src.SAP.generated.controllers.gdpr_controller
      parameters:
        - in: query
          name: identifier_type
          schema:
            $ref: '#/components/schemas/PersonalIdentifierType'
          description: Identifier type
          required: true
        - in: query
          name: identifier
          schema:
            type: string
          description: Personal identifier number.
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalData'


  /upload/single_upload:
    post:
      description: Manually upload isolate with metadata
      operationId: single_upload
      x-openapi-router-controller: web.src.SAP.generated.controllers.upload_controller
      x-codegen-request-body-name: query
      tags:
        - upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SingleUploadRequest'
            encoding:
              metadata:
                contentType: application/json
              files:
                contentType: application/gzip
      responses:
        '200':
          description: Isolate uploaded successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
        '299':
          description: Isolate upload failed. Reports errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'

  /upload/multi:
    post:
      description: Manually upload multiple sequences with metadata
      operationId: multi_upload
      x-openapi-router-controller: web.src.SAP.generated.controllers.upload_controller
      x-codegen-request-body-name: query
      tags:
        - upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiUploadRequest'
            encoding:
              metadata_tsv:
                contentType: text/tsv
              files:
                contentType: application/gzip
      responses:
        '200':
          description: Isolate uploaded successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
        '299':
          description: Isolate upload failed. Reports errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'

  /upload/bulk_metadata:
    post:
      description: Manually upload metadata for previously uploaded sequence files
      operationId: bulk_metadata
      x-openapi-router-controller: web.src.SAP.generated.controllers.upload_controller
      x-codegen-request-body-name: query
      tags:
        - upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BulkUploadRequest'
            encoding:
              path:
                contentType: text/plain
              metadata_tsv:
                contentType: text/tsv
      responses:
        '200':
          description: Isolate uploaded successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
        '299':
          description: Isolate upload failed. Reports errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
  /health_ext_lims:
    get:
      description: ''
      operationId: health_ext_lims
      x-openapi-router-controller: web.src.SAP.generated.controllers.health_controller
      x-codegen-request-body-name: query
      tags:
        - health
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /health_ext_tbr:
    get:
      description:  ''
      operationId: health_ext_tbr
      x-openapi-router-controller: web.src.SAP.generated.controllers.health_controller
      x-codegen-request-body-name: query
      tags:
        - health
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /samples/{sample_id}:
    get:
      description: Get an individual sample by id
      operationId: get_sample_by_id
      x-openapi-router-controller: web.src.SAP.generated.controllers.samples_controller
      tags:
        - samples
      parameters:
        - name: sample_id
          in: path
          required: true
          schema:
            type: string
          description: id of sample
      responses:
        '200':
          description: Sample
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sample'
  /samples/add_to_cluster:
    post:
      operationId: add_to_cluster
      requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddToCluster"
      responses:
        '204':
          description: "Samples added to cluster."
      tags:
        - samples
      x-openapi-router-controller: web.src.SAP.generated.controllers.samples_controller

components:
  schemas:
    Organization:
      type: string
      enum: [SSI, FVST, Other]

    TreeMethod:
      type: string
      enum: [single, complete, average, weighted, centroid, median, ward]

    AnalysisHistory:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AnalysisResult'

    SingleAnalysisResult:
      $ref: '#/components/schemas/AnalysisResult'

    PageOfAnalysis:
      required:
        - paging_token
        - total_count
        - items
        - approval_matrix
        - filter_options
      properties:
        paging_token:
          type: string
          nullable: true
        total_count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/AnalysisResult'
        approval_matrix:
          $ref: '#/components/schemas/ApprovalMatrix'
        filter_options:
          $ref: '#/components/schemas/FilterOptions'

    FilterOptions:
      type: object
      properties:
        date_sample:
          $ref: '#/components/schemas/DateRange'
        date_received:
          $ref: '#/components/schemas/DateRange'
        institutions:
          type: array
          items:
            type: string
        project_titles:
          type: array
          items:
            type: string
        project_numbers:
          type: array
          items:
            type: string
        animals:
          type: array
          items:
            type: string
        run_ids:
          type: array
          items:
            type: string
        isolate_ids:
          type: array
          items:
            type: string
        fud_nos:
          type: array
          items:
            type: string
        cluster_ids:
          type: array
          items:
            type: string
        qc_provided_species:
          type: array
          items:
            type: string
        serotype_finals:
          type: array
          items:
            type: string
        st_finals:
          type: array
          items:
            type: string

    DateRange:
      type: object
      properties:
        min:
          type: string
          format: date-time
          nullable: true
        max:
          type: string
          format: date-time
          nullable: true

    QueryOperator:
      type: string
      enum: ["AND", "OR", "AND NOT", "OR NOT", "<implicit>"]

    QueryRangeInclusivity:
      type: string
      enum: ["left", "right", "both", "none"]

    QueryOperand:
      type: object
      properties:
        operator:
          $ref: "#/components/schemas/QueryOperator"
        left:
          type: object
        right:
          type: object
        field:
          type: string
        term:
          nullable: true
          type: string
        inclusive:
          $ref: "#/components/schemas/QueryRangeInclusivity"
          nullable: true
        term_min:
          nullable: true
          type: string
        term_max:
          nullable: true
          type: string
        prefix:
          nullable: true
          type: string

    QueryExpression:
      type: object
      properties:
        left:
          $ref: "#/components/schemas/QueryOperand"
        operator:
          $ref: "#/components/schemas/QueryOperator"
        right:
          $ref: "#/components/schemas/QueryOperand"

    AnalysisQuery:
      properties:
        paging_token:
          type: string
          description: opaque token to supply to get the next page of isolates
          format: byte
          nullable: true
        page_size:
          type: integer
          default: 100
          nullable: true
        expression:
          $ref: "#/components/schemas/QueryExpression"
        filters:
          type: object

    HealthResponse:
      type: object
      properties:
        data:
          type: object
        description:
          type: string
        exception:
          $ref: "#/components/schemas/Exception"
        status:
          $ref: "#/components/schemas/HealthStatus"
      required: ["status", "description"]

    Exception:
      type: object
      properties:
        source:
          type: string
        message:
          type: string
        stackTrace:
          type: string
        data:
          type: object
        targetSite:
          type: string
        helpLink:
          type: string
        innerException:
          $ref: "#/components/schemas/Exception"
      required: ["message"]

    HealthStatus:
      type: string
      enum: ["Unhealthy", "Degraded", "Healthy"]

    Sample:
      type: object
      properties:
        name:
          type: string
        categories:
          type: object
          properties:
            resistance:
              type: object
              properties:
                summary:
                  type: string
                report:
                  type: object
                  properties:
                    phenotypes:
                      type: object
                      additionalProperties:
                        $ref: "#/components/schemas/Phenotype"

    Phenotype:
      type: object
      properties:
        amr_classes:
          type: array
          items:
            type: string
        genes:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Gene"
        grade:
          type: number

    Gene:
      type: object
      properties:
        gene_id:
          type: string
        identity:
          type: number
        ref_seq_length:
          type: number
        alignment_length:
          type: number
        phenotypes:
          nullable: true
          type: array
          items:
            type: string
        depth:
          type: number
        contig:
          type: string
        contig_start_pos:
          type: number
        contig_end_pos:
          type: number
        notes:
          nullable: true
          type: array
          items:
            type: string
        pmids:
          nullable: true
          type: array
          items:
            type: string
        ref_acc:
          type: string

    Column:
      properties:
        approvable:
          description: True if the column can be approved
          type: boolean
        editable:
          description: True if the column can be edited
          type: boolean
        editable_format:
          description: Format for editable fields. Not required.
          type: string
          nullable: true
        pii:
          description: True if the column should be restricted to viewing only by the institution that owns it
          type: boolean
        gdpr:
          description: True if the column should be treated as a 'gdpr' column, subject to more strict auditing/logging
          type: boolean
        computed:
          description: >
            True if the column is programmatically calculated by SOFI.
            Such columns can be approvable in the sense of being transferred to a metadata service as part of an approval,
            but should not be thought of as 'selectable' or capable of any user-side manipulation.
          type: boolean
        organizations:
          type: array
          description: List of organizations/institutions who 'own' or should have unrestricted access to this field
          items:
            $ref: "#/components/schemas/Organization"
        field_name:
          type: string
        approves_with:
          description: List of other columns, if any, that should be sent along when this column gets approved
          type: array
          items:
            type: string
        cross_org_editable:
          description: True if the column can be edited by users from other organizations
          type: boolean

    UserDefinedView:
      type: object
      properties:
        name:
          type: string
        hidden_columns:
          type: array
          items:
            type: string
        column_resizing:
          type: object
          properties:
            column_widths:
              type: object
              additionalProperties: true
            column_width:
              type: integer
        sort_by:
          type: array
          items:
            type: object
            properties:
              desc:
                type: boolean
              id:
                type: string
        column_order:
          type: array
          items:
            type: string
    ApprovalRequest:
      type: object
      required:
        - matrix
      properties:
        matrix:
          $ref: "#/components/schemas/ApprovalMatrix"
        required_values:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
        revoked_sequence_ids:
          type: array
          items:
            type: string

    Approval:
      allOf:
        - $ref: '#/components/schemas/ApprovalRequest'
        - type: object
          properties:
            id:
              type: string
            approver:
              type: string
            timestamp:
              type: string
              format: date-time
            sequence_ids:
              type: array
              items:
                type: string
            status:
              type: string
              enum: [pending, cancelled, submitted]

    ApprovalStatus:
      type: string
      enum: [pending, rejected, approved]

    ApprovalMatrix:
      type: object
      additionalProperties:
        type: object
        additionalProperties:
          type: string
          $ref: "#/components/schemas/ApprovalStatus"

    AnalysisChange:
      type: object
      additionalProperties:
        type: object
        additionalProperties:
          type: string

    MetadataReloadRequest:
      type: object
      required:
        - isolateId
        - institution
      properties:
        isolateId:
          type: string
        institution:
          $ref: "#/components/schemas/Organization"

    MetadataReloadResponse:
      oneOf:
        - $ref: '#/components/schemas/TbrMetadata'
        - $ref: '#/components/schemas/LimsMetadata'
      discriminator:
        propertyName: institution

    Resistance:
      type: string
      enum: ["Sensitiv", "Resistent"]

    BaseMetadata:
      required:
        - id
        - sequence_id
        - isolate_id
        - institution
        - date_received
        - run_id
        - primary_isolate
      properties:
        id:
          type: string
        sequence_id:
          type: string
        sequence_filename:
          type: string
        isolate_id:
          type: string
        institution:
          $ref: "#/components/schemas/Organization"
        project_number:
          type: string
        project_title:
          type: string
        date_sample:
          format: date-time
          type: string
        date_received:
          format: date-time
          type: string
        date_sofi:
          format: date-time
          type: string
        run_id:
          type: string
        public_number:
          type: string
        primary_isolate:
          type: boolean

    TbrSpecificMetadata:
      type: object
      required:
        - run_date
      properties:
        cpr_nr:
          type: string
        gender:
          type: string
          enum:
            - M
            - K
        name:
          type: string
          x-faker: name.findName
        age:
          type: integer
          minimum: 0
          maximum: 128
        travel:
          type: string
        travel_country:
          type: string
          x-faker: address.country
        date_run:
          format: date-time
          type: string
        date_received_kma:
          format: date-time
          type: string
        kma:
          type: string
        region:
          type: string
        fud_number:
          type: string
        cluster_id:
          type: string
        date_epi:
          type: string

    TbrMetadata:
      allOf:
        - $ref: '#/components/schemas/BaseMetadata'
        - $ref: '#/components/schemas/TbrSpecificMetadata'

    LimsSpecificMetadata:
      type: object
      properties:
        chr_number:
          type: string
        cvr_number:
          type: string
        aut_number:
          type: string
        product_type:
          type: string
        product:
          type: string
        origin_country:
          type: string
          x-faker: address.country
        animal_species:
          type: string
        sample_info:
          type: string

    LimsMetadata:
      allOf:
        - $ref: '#/components/schemas/BaseMetadata'
        - $ref: '#/components/schemas/LimsSpecificMetadata'

    AnalysisResult:
      allOf:
        - $ref: '#/components/schemas/BaseMetadata'
        - $ref: '#/components/schemas/LimsSpecificMetadata'
        - $ref: '#/components/schemas/TbrSpecificMetadata'
        - type: object
          required:
            - isolate_id
          properties:
            latest_for_isolate:
              type: string
              description: sequence_id of latest result with this same isolate_id
            resfinder_version:
              type: string
            date_received_kma:
              type: string
              format: date-time
            date_analysis_sofi:
              type: string
              format: date-time
            date_approved_serotype:
              type: string
              format: date-time
            date_approved_qc:
              type: string
              format: date-time
            date_approved_amr:
              type: string
              format: date-time
            date_approved_st:
              type: string
              format: date-time
            date_approved_toxin:
              type: string
              format: date-time
            date_approved_cluster:
              type: string
              format: date-time
            date_approved_cdiff:
              type: string
              format: date-time
            qc_provided_species:
              type: string
            qc_genome1x:
              type: number
            qc_genome10x:
              type: number
            qc_gsize_diff1x10:
              type: number
            qc_avg_coverage:
              type: number
            qc_final:
              type: string
              enum: ["A", "B", "C"]
            qc_action:
              type: string
            qc_num_contigs:
              type: number
            qc_ambiguous_sites:
              type: number
            qc_num_reads:
              type: number
            qc_main_sp_plus_uncl:
              type: number
            qc_unclassified_reads:
              type: number
            qc_db_id:
              type: string
            qc_db_id2:
              type: string
            qc_failed_tests:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  display_name:
                    type: string
                  reason:
                    type: string
            call_percent:
              type: number
            multiple_alleles:
              type: number
            subspecies:
              type: string
            species_final:
              type: string
            st:
              type: string
            st_final:
              type: integer
            st_alleles:
              type: object
            pathotype:
              type: string
            pathotype_final:
              type: string
            sero_enterobase:
              type: string
            sero_seqsero:
              type: string
            sero_antigen_seqsero:
              type: string
            sero_d_tartrate:
              type: string
            sero_serotype_finder:
              type: string
            serotype_final:
              type: string
            adhesion_final:
              type: string
            virulence_genes:
              type: string
            toxins_final:
              type: string
            infection_source:
              type: string
            resistance_genes:
              type: string
            amr_profile:
              type: string
            comment:
              type: string
            comment_cluster:
              type: string
            comment_general:
              type: string
            comment_supplementary:
              type: string
            comment_qc:
              type: string
            amr_ami:
              $ref: "#/components/schemas/Resistance"
            amr_amp:
              $ref: "#/components/schemas/Resistance"
            amr_azi:
              $ref: "#/components/schemas/Resistance"
            amr_fep:
              $ref: "#/components/schemas/Resistance"
            amr_fot:
              $ref: "#/components/schemas/Resistance"
            amr_f_c:
              $ref: "#/components/schemas/Resistance"
            amr_fox:
              $ref: "#/components/schemas/Resistance"
            amr_taz:
              $ref: "#/components/schemas/Resistance"
            amr_t_c:
              $ref: "#/components/schemas/Resistance"
            amr_chl:
              $ref: "#/components/schemas/Resistance"
            amr_cip:
              $ref: "#/components/schemas/Resistance"
            amr_cli:
              $ref: "#/components/schemas/Resistance"
            amr_col:
              $ref: "#/components/schemas/Resistance"
            amr_dap:
              $ref: "#/components/schemas/Resistance"
            amr_etp:
              $ref: "#/components/schemas/Resistance"
            amr_ery:
              $ref: "#/components/schemas/Resistance"
            amr_fus:
              $ref: "#/components/schemas/Resistance"
            amr_gen:
              $ref: "#/components/schemas/Resistance"
            amr_imi:
              $ref: "#/components/schemas/Resistance"
            amr_kan:
              $ref: "#/components/schemas/Resistance"
            amr_lzd:
              $ref: "#/components/schemas/Resistance"
            amr_mero:
              $ref: "#/components/schemas/Resistance"
            amr_mup:
              $ref: "#/components/schemas/Resistance"
            amr_nal:
              $ref: "#/components/schemas/Resistance"
            amr_pen:
              $ref: "#/components/schemas/Resistance"
            amr_syn:
              $ref: "#/components/schemas/Resistance"
            amr_rif:
              $ref: "#/components/schemas/Resistance"
            amr_str:
              $ref: "#/components/schemas/Resistance"
            amr_sul:
              $ref: "#/components/schemas/Resistance"
            amr_tei:
              $ref: "#/components/schemas/Resistance"
            amr_trm:
              $ref: "#/components/schemas/Resistance"
            amr_tet:
              $ref: "#/components/schemas/Resistance"
            amr_tia:
              $ref: "#/components/schemas/Resistance"
            amr_tgc:
              $ref: "#/components/schemas/Resistance"
            amr_tmp:
              $ref: "#/components/schemas/Resistance"
            amr_van:
              $ref: "#/components/schemas/Resistance"
            cgmlst_schema:
              type: object
            trst:
              type: string
            tcda:
              type: string
            tcdb:
              type: string
            cdta_cdtb:
              type: string
            del_117:
              type: string
            a117t:
              type: string
            cdiff_details:
              type: string
            adhaesion:
              type: string
            toxin:
              type: string
            toxin_details:
              type: string
            bifrost_min_read_check:
              type: string
            bifrost_whats_my_species:
              type: string
            bifrost_assemblatron:
              type: string
            bifrost_assembly_qc:
              type: string
            bifrost_ssi_stamper:
              type: string
            bifrost_cge_mlst:
              type: string
            bifrost_cge_resfinder:
              type: string
            bifrost_seqsero:
              type: string
            bifrost_enterobase:
              type: string
            bifrost_salmonella_subspecies_dtartrate:
              type: string
            bifrost_chewbbaca:
              type: string
            bifrost_sp_ecoli:
              type: string
            bifrost_sp_cdiff:
              type: string
            bifrost_amrfinderplus:
              type: string


    NewickTreeResponse:
      type: object
      required:
        - tree
      properties:
        tree:
          type: string


    UploadMetadataFields:
      type: object
      description:
        Corresponds to fields of the metadata.tsv file for initiating an execution of the analysis tool pipeline
      properties:
        sample_id:
          type: string
        provided_species:
          type: string
        group:
          type: string
        experiment_name:
          type: string
        sequence_run_date:
          format: date-time
          type: string
        sofi_sequence_id:
          type: string
        project_no:
          type: string
        project_title:
          type: string

    SingleUploadRequest:
      type: object
      properties:
        metadata:
          type: string
          format: binary
        files:
          type: array
          items:
            type: string
            format: binary

    MultiUploadRequest:
      type: object
      required:
        - metadata_tsv
        - files
      properties:
        metadata_tsv:
          type: string
          format: binary
        files:
          type: array
          items:
            type: string
            format: binary

    BulkUploadRequest:
      type: object
      required:
        - path
        - metadata_tsv
      properties:
        path:
          type: string
        metadata_tsv:
          type: string
          format: binary

    UploadResponse:
      type: object
      properties:
        errors:
          type: array
          items: 
            type: string


    PersonalIdentifierType:
      type: string
      enum: ["CPR", "CVR", "CHR"]

    PersonalData:
      required:
        - data
      type: object
      properties:
        data:
          type: string
    
    DataClearance:
      type: string
      enum: ["own-institution", "cross-institution", "all"]

    Permission:
      type: string
      enum: ["search", "export", "approve", "phylogeny.read", "phylogeny.write", "gdpr.manage", "permissions.write"]

    UserInfo:
      type: object
      properties:
        userId:
          type: string
        data_clearance:
          $ref: "#/components/schemas/DataClearance"
        institution:
          $ref:  "#/components/schemas/Organization"
        groups:
          type: array
          items:
            type: string
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/Permission"

    NearestNeighborsRequest:
      properties:
        id:
          type: string
          title: Input Mongo Id
        cutoff:
          type: integer
          title: Cutoff
        unknownsAreDiffs:
          type: boolean
          title: Unknowns Are Diffs
      type: object
      required:
      - id
      - cutoff
      - unknownsAreDiffs
      title: NearestNeighborsRequest
      description: Parameters for a REST request for a nearest neighbors calculation.

    NearestNeighborsResponse:
      properties:
        jobId:
          type: string
          title: Job Id
        createdAt:
          type: string
          title: Created At
        status:
          "$ref": "#/components/schemas/BioApiStatus"
        result:
          type: array
          items:
            "$ref": "#/components/schemas/AnalysisResult"
          title: Result
          nullable: true

    BioApiStatus:
      type: string
      enum:
      - init
      - completed
      - error
      title: Status

    Workspace:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        samples:
          type: array
          items:
            type: string
          title: Samples          
      type: object
      required:
      - id
      - name

    MicroreactProject:
      properties:
        id:
          type: string
          title: Id
        url:
          type: string
          title: Url
      type: object

    CreateWorkspace:
      properties:
        name:
          type: string
          title: Name
        samples:
          type: array
          items:
            type: string
          title: Samples
      type: object
      required:
      - name
    
    AddToCluster:
      properties:
        clusterid:
          type: string
          title: ClusterId
        samples:
          type: array
          items:
            type: string
          title: Samples
      type: object
      required:
      - clusterid

    CloneWorkspace:
      properties:
        name:
          type: string
          title: Name
        id:
          type: string
          title: Id
      type: object
      required:
      - name
      - id

    UpdateWorkspace:
      properties:
        samples:
          type: array
          items:
            type: string
          title: Samples
      type: object
      required:
      - samples 

    WorkspaceInfo:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        samples:
          type: array
          items:
            $ref: '#/components/schemas/AnalysisResult'
          title: Samples
        microreact:
          $ref: '#/components/schemas/MicroreactProject'
          title: Microreact
      type: object
      required:
      - name
      - samples

    NewMicroreactProjectRequest:
      type: object
      properties:
        workspace:
          type: string
        mr_access_token:
          type: string
        tree_methods:
          type: array
          items:
            $ref: "#/components/schemas/TreeMethod"
      required:
        - workspace
        - mr_access_token
        - tree_methods

    NewMicroreactProjectResponse:
      properties:
        isOwner:
          type: boolean
        id:
          type: string
        url:
          type: string
          
    MicroreactUrlResponse:
      properties:
        url:
          type: string

  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: web.src.SAP.generated.controllers.security_controller_.info_from_jwt
    microreactjwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: web.src.SAP.generated.controllers.security_controller_.info_from_microreactjwt
