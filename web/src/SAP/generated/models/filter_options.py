# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from web.src.SAP.generated.models.base_model_ import Model
from web.src.SAP.generated.models.date_range import DateRange
from web.src.SAP.generated import util

from web.src.SAP.generated.models.date_range import DateRange  # noqa: E501

class FilterOptions(Model):



    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
    Do not edit the class manually.
    """

    def __init__(self, date_sample=None, date_received=None, institutions=None, project_titles=None, project_numbers=None, animals=None, run_ids=None, isolate_ids=None, fud_nos=None, cluster_ids=None, qc_provided_species=None, serotype_finals=None, st_finals=None):  # noqa: E501
        """FilterOptions - a model defined in OpenAPI

        :param date_sample: The date_sample of this FilterOptions.  # noqa: E501
        :type date_sample: DateRange
        :param date_received: The date_received of this FilterOptions.  # noqa: E501
        :type date_received: DateRange
        :param institutions: The institutions of this FilterOptions.  # noqa: E501
        :type institutions: List[str]
        :param project_titles: The project_titles of this FilterOptions.  # noqa: E501
        :type project_titles: List[str]
        :param project_numbers: The project_numbers of this FilterOptions.  # noqa: E501
        :type project_numbers: List[str]
        :param animals: The animals of this FilterOptions.  # noqa: E501
        :type animals: List[str]
        :param run_ids: The run_ids of this FilterOptions.  # noqa: E501
        :type run_ids: List[str]
        :param isolate_ids: The isolate_ids of this FilterOptions.  # noqa: E501
        :type isolate_ids: List[str]
        :param fud_nos: The fud_nos of this FilterOptions.  # noqa: E501
        :type fud_nos: List[str]
        :param cluster_ids: The cluster_ids of this FilterOptions.  # noqa: E501
        :type cluster_ids: List[str]
        :param qc_provided_species: The qc_provided_species of this FilterOptions.  # noqa: E501
        :type qc_provided_species: List[str]
        :param serotype_finals: The serotype_finals of this FilterOptions.  # noqa: E501
        :type serotype_finals: List[str]
        :param st_finals: The st_finals of this FilterOptions.  # noqa: E501
        :type st_finals: List[str]
        """
        self.openapi_types = {
            'date_sample': DateRange,
            'date_received': DateRange,
            'institutions': List[str],
            'project_titles': List[str],
            'project_numbers': List[str],
            'animals': List[str],
            'run_ids': List[str],
            'isolate_ids': List[str],
            'fud_nos': List[str],
            'cluster_ids': List[str],
            'qc_provided_species': List[str],
            'serotype_finals': List[str],
            'st_finals': List[str],
        }

        self.attribute_map = {
            'date_sample': 'date_sample',
            'date_received': 'date_received',
            'institutions': 'institutions',
            'project_titles': 'project_titles',
            'project_numbers': 'project_numbers',
            'animals': 'animals',
            'run_ids': 'run_ids',
            'isolate_ids': 'isolate_ids',
            'fud_nos': 'fud_nos',
            'cluster_ids': 'cluster_ids',
            'qc_provided_species': 'qc_provided_species',
            'serotype_finals': 'serotype_finals',
            'st_finals': 'st_finals',
        }

        self._date_sample = date_sample
        self._date_received = date_received
        self._institutions = institutions
        self._project_titles = project_titles
        self._project_numbers = project_numbers
        self._animals = animals
        self._run_ids = run_ids
        self._isolate_ids = isolate_ids
        self._fud_nos = fud_nos
        self._cluster_ids = cluster_ids
        self._qc_provided_species = qc_provided_species
        self._serotype_finals = serotype_finals
        self._st_finals = st_finals

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FilterOptions of this FilterOptions.  # noqa: E501
        :rtype: FilterOptions
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_sample(self):
        """Gets the date_sample of this FilterOptions.


        :return: The date_sample of this FilterOptions.
        :rtype: DateRange
        """
        return self._date_sample

    @date_sample.setter
    def date_sample(self, date_sample):
        """Sets the date_sample of this FilterOptions.


        :param date_sample: The date_sample of this FilterOptions.
        :type date_sample: DateRange
        """

        self._date_sample = date_sample

    @property
    def date_received(self):
        """Gets the date_received of this FilterOptions.


        :return: The date_received of this FilterOptions.
        :rtype: DateRange
        """
        return self._date_received

    @date_received.setter
    def date_received(self, date_received):
        """Sets the date_received of this FilterOptions.


        :param date_received: The date_received of this FilterOptions.
        :type date_received: DateRange
        """

        self._date_received = date_received

    @property
    def institutions(self):
        """Gets the institutions of this FilterOptions.


        :return: The institutions of this FilterOptions.
        :rtype: List[str]
        """
        return self._institutions

    @institutions.setter
    def institutions(self, institutions):
        """Sets the institutions of this FilterOptions.


        :param institutions: The institutions of this FilterOptions.
        :type institutions: List[str]
        """

        self._institutions = institutions

    @property
    def project_titles(self):
        """Gets the project_titles of this FilterOptions.


        :return: The project_titles of this FilterOptions.
        :rtype: List[str]
        """
        return self._project_titles

    @project_titles.setter
    def project_titles(self, project_titles):
        """Sets the project_titles of this FilterOptions.


        :param project_titles: The project_titles of this FilterOptions.
        :type project_titles: List[str]
        """

        self._project_titles = project_titles

    @property
    def project_numbers(self):
        """Gets the project_numbers of this FilterOptions.


        :return: The project_numbers of this FilterOptions.
        :rtype: List[str]
        """
        return self._project_numbers

    @project_numbers.setter
    def project_numbers(self, project_numbers):
        """Sets the project_numbers of this FilterOptions.


        :param project_numbers: The project_numbers of this FilterOptions.
        :type project_numbers: List[str]
        """

        self._project_numbers = project_numbers

    @property
    def animals(self):
        """Gets the animals of this FilterOptions.


        :return: The animals of this FilterOptions.
        :rtype: List[str]
        """
        return self._animals

    @animals.setter
    def animals(self, animals):
        """Sets the animals of this FilterOptions.


        :param animals: The animals of this FilterOptions.
        :type animals: List[str]
        """

        self._animals = animals

    @property
    def run_ids(self):
        """Gets the run_ids of this FilterOptions.


        :return: The run_ids of this FilterOptions.
        :rtype: List[str]
        """
        return self._run_ids

    @run_ids.setter
    def run_ids(self, run_ids):
        """Sets the run_ids of this FilterOptions.


        :param run_ids: The run_ids of this FilterOptions.
        :type run_ids: List[str]
        """

        self._run_ids = run_ids

    @property
    def isolate_ids(self):
        """Gets the isolate_ids of this FilterOptions.


        :return: The isolate_ids of this FilterOptions.
        :rtype: List[str]
        """
        return self._isolate_ids

    @isolate_ids.setter
    def isolate_ids(self, isolate_ids):
        """Sets the isolate_ids of this FilterOptions.


        :param isolate_ids: The isolate_ids of this FilterOptions.
        :type isolate_ids: List[str]
        """

        self._isolate_ids = isolate_ids

    @property
    def fud_nos(self):
        """Gets the fud_nos of this FilterOptions.


        :return: The fud_nos of this FilterOptions.
        :rtype: List[str]
        """
        return self._fud_nos

    @fud_nos.setter
    def fud_nos(self, fud_nos):
        """Sets the fud_nos of this FilterOptions.


        :param fud_nos: The fud_nos of this FilterOptions.
        :type fud_nos: List[str]
        """

        self._fud_nos = fud_nos

    @property
    def cluster_ids(self):
        """Gets the cluster_ids of this FilterOptions.


        :return: The cluster_ids of this FilterOptions.
        :rtype: List[str]
        """
        return self._cluster_ids

    @cluster_ids.setter
    def cluster_ids(self, cluster_ids):
        """Sets the cluster_ids of this FilterOptions.


        :param cluster_ids: The cluster_ids of this FilterOptions.
        :type cluster_ids: List[str]
        """

        self._cluster_ids = cluster_ids

    @property
    def qc_provided_species(self):
        """Gets the qc_provided_species of this FilterOptions.


        :return: The qc_provided_species of this FilterOptions.
        :rtype: List[str]
        """
        return self._qc_provided_species

    @qc_provided_species.setter
    def qc_provided_species(self, qc_provided_species):
        """Sets the qc_provided_species of this FilterOptions.


        :param qc_provided_species: The qc_provided_species of this FilterOptions.
        :type qc_provided_species: List[str]
        """

        self._qc_provided_species = qc_provided_species

    @property
    def serotype_finals(self):
        """Gets the serotype_finals of this FilterOptions.


        :return: The serotype_finals of this FilterOptions.
        :rtype: List[str]
        """
        return self._serotype_finals

    @serotype_finals.setter
    def serotype_finals(self, serotype_finals):
        """Sets the serotype_finals of this FilterOptions.


        :param serotype_finals: The serotype_finals of this FilterOptions.
        :type serotype_finals: List[str]
        """

        self._serotype_finals = serotype_finals

    @property
    def st_finals(self):
        """Gets the st_finals of this FilterOptions.


        :return: The st_finals of this FilterOptions.
        :rtype: List[str]
        """
        return self._st_finals

    @st_finals.setter
    def st_finals(self, st_finals):
        """Sets the st_finals of this FilterOptions.


        :param st_finals: The st_finals of this FilterOptions.
        :type st_finals: List[str]
        """

        self._st_finals = st_finals
