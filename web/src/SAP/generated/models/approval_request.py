# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from web.src.SAP.generated.models.base_model_ import Model
from web.src.SAP.generated.models.approval_status import ApprovalStatus
from web.src.SAP.generated import util

from web.src.SAP.generated.models.approval_status import ApprovalStatus  # noqa: E501

class ApprovalRequest(Model):



    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
    Do not edit the class manually.
    """

    def __init__(self, matrix=None, required_values=None, revoked_sequence_ids=None):  # noqa: E501
        """ApprovalRequest - a model defined in OpenAPI

        :param matrix: The matrix of this ApprovalRequest.  # noqa: E501
        :type matrix: Dict[str, Dict[str, ApprovalStatus]]
        :param required_values: The required_values of this ApprovalRequest.  # noqa: E501
        :type required_values: Dict[str, Dict[str, str]]
        :param revoked_sequence_ids: The revoked_sequence_ids of this ApprovalRequest.  # noqa: E501
        :type revoked_sequence_ids: List[str]
        """
        self.openapi_types = {
            'matrix': Dict[str, Dict[str, ApprovalStatus]],
            'required_values': Dict[str, Dict[str, str]],
            'revoked_sequence_ids': List[str],
        }

        self.attribute_map = {
            'matrix': 'matrix',
            'required_values': 'required_values',
            'revoked_sequence_ids': 'revoked_sequence_ids',
        }

        self._matrix = matrix
        self._required_values = required_values
        self._revoked_sequence_ids = revoked_sequence_ids

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ApprovalRequest of this ApprovalRequest.  # noqa: E501
        :rtype: ApprovalRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def matrix(self):
        """Gets the matrix of this ApprovalRequest.


        :return: The matrix of this ApprovalRequest.
        :rtype: Dict[str, Dict[str, ApprovalStatus]]
        """
        return self._matrix

    @matrix.setter
    def matrix(self, matrix):
        """Sets the matrix of this ApprovalRequest.


        :param matrix: The matrix of this ApprovalRequest.
        :type matrix: Dict[str, Dict[str, ApprovalStatus]]
        """
        if matrix is None:
            raise ValueError("Invalid value for `matrix`, must not be `None`")  # noqa: E501

        self._matrix = matrix

    @property
    def required_values(self):
        """Gets the required_values of this ApprovalRequest.


        :return: The required_values of this ApprovalRequest.
        :rtype: Dict[str, Dict[str, str]]
        """
        return self._required_values

    @required_values.setter
    def required_values(self, required_values):
        """Sets the required_values of this ApprovalRequest.


        :param required_values: The required_values of this ApprovalRequest.
        :type required_values: Dict[str, Dict[str, str]]
        """

        self._required_values = required_values

    @property
    def revoked_sequence_ids(self):
        """Gets the revoked_sequence_ids of this ApprovalRequest.


        :return: The revoked_sequence_ids of this ApprovalRequest.
        :rtype: List[str]
        """
        return self._revoked_sequence_ids

    @revoked_sequence_ids.setter
    def revoked_sequence_ids(self, revoked_sequence_ids):
        """Sets the revoked_sequence_ids of this ApprovalRequest.


        :param revoked_sequence_ids: The revoked_sequence_ids of this ApprovalRequest.
        :type revoked_sequence_ids: List[str]
        """

        self._revoked_sequence_ids = revoked_sequence_ids
